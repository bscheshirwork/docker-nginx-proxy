# example.com
# backend certbot and redirect to 443
server {
    listen 80;
    server_name example.com;

    access_log  /var/log/nginx/proxy-80-access.log;
    error_log   /var/log/nginx/proxy-80-error.log;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name example.com;

    access_log  /var/log/nginx/proxy-443-access.log;
    error_log   /var/log/nginx/proxy-443-error.log;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        proxy_pass http://example.com.dev:8081; #redirect to 8081 by alias in separater docker network
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
    }
    # let the browsers know that we only accept HTTPS
    add_header Strict-Transport-Security max-age=31536000;

    # important note: change part 'example.com' of this path to correct folder name from line 4 cert_name="example.com" of init-letsencrypt.sh
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
